I'm tying together two datasets: one that I collected myself, of historical
cycle hire availability; and one of weather. I'm doing an analysis from July
2013 to June 2014.

---

The cycle hire dataset has a granularity of ten minutes. That's ~50000
observations per docking station for the year, so I'm choosing to focus on four
docking stations only (the ones near my office that I most often use when
commuting).

I collected it over the course of the year by downloading the CSV files from
http://borisapi.herokuapp.com/. I'm not aware of a public log of these files, I
was collecting them myself. Using shell, I extracted the lines relating to the
stations I wanted, and removed any duplicates. Duplicates could happen when the
API failed to update; and observations could be missing where the API went down
or my script failed to run for whatever reason.

(As I write this, the data returned by the API hasn't been updated since April,
so there's a possibility that it's going to go down completely.)

There are four data files, one per station. They have these fields:

- id: The unique ID of this station.
- *updated_at: The time that the data for this station was updated. Not
  necessarily the time that I downloaded the CSV file. For example, when
  Southampton Place went out of service for a while, its updated_at field stayed
  constant.
- *name: The name of this station.
- lat, long: Geographic coordinates.
- *nb_bikes: How many bikes are currently available.
- *nb_empty_docks: How many empty docking stations are currently available.
- installed, locked, temporary: Don't seem to mean anything. They're fixed at
  true, false, false.

I only used the ones marked with asterisks.

---

The weather dataset has a granularity of one day. The weather data is taken from
Weather Underground, using the weather station at Lonon Heathrow Airport.

http://www.wunderground.com/history/airport/EGLL/2013/7/1/CustomHistory.html?dayend=30&monthend=6&yearend=2014&req_city=&req_state=&req_statename=&reqdb.zip=&reqdb.magic=&reqdb.wmo=

(London City Airport is closer to the bike stations that I use, but the data
from that airport reports 0 precipitation on every single day. The data from
Heathrow seems to be more complete, and I expect it to be almost as relevant.)

Fields:

- BST: The date of this observation
- Max TemperatureC, Mean TemperatureC, Min TemperatureC, Dew PointC, MeanDew
  PointC, Min DewpointC, Max Humidity, Mean Humidity, Min Humidity, Max Sea
  Level PressurehPa, Mean Sea Level PressurehPa, Min Sea Level PressurehPa, Max
  VisibilityKm, Mean VisibilityKm, Min VisibilitykM, Precipitationmm: These are
  all pretty obvious. I didn't use all of them.
- Max Wind SpeedKm/h, Mean Wind SpeedKm/h, Max Gust SpeedKm/h: The max wind
  speed is 'maximum mean wind speed over some time period' (I think a minute).
  The mean is the mean over the whole day. The gust is the same as max wind
  speed, but over a shorter time period (I think 14 seconds).
- CloudCover, WindDirDegrees: Not sure of the exact interpretation, but I didn't
  use them.
- Events: Text field containing some combination of Rain, Fog, Thunderstorm,
  Snow.

---

After dropping fields that I don't use, renaming the rest, and adding some, I
end up with:

- updated: The date-time of the observation.
- updated.date, updated.time: The date and time, separately.
- weekday, is.weekday: The day of the week, and whether it falls during the
  working week.
- name: The station name.
- num.bikes, num.spaces, num.docks: The reported number of bikes and empty
  slots, and the derived total number of accessible docks.
- t.min, t, t.max: Temperature readings for the day.
- wind, wind.max, gust: Wind readings for the day.
- rain, precip.mm: Respectively boolean and numeric indicators of rainfall.
- fog: Boolean, fog presence.
- prev.updated*, prev.num*: The updated* and num* fields from the *previous*
  observation.
- d.updated, d.num.bikes: The difference between the previous and current
  observations for these fields.

Towards the end, I add the field `updated.time.bin`, which rounds
`updated.time` to the nearest ten minutes. I use this to construct a new data
frame with fields:

- updated.date, name, rain: As in the original data frame.
- at.0900, at.0930: The number of spaces available in that station, on that
  date, at those times.

I also have a separate data frame holding just the weather data. (Of note,
there are a few days with no bike updates, so the weather data would look
slightly different if we only took it from the main data frame.)
